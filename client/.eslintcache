[{"D:\\SKRIPSI\\gowes\\client\\src\\index.js":"1","D:\\SKRIPSI\\gowes\\client\\src\\App.js":"2","D:\\SKRIPSI\\gowes\\client\\src\\reportWebVitals.js":"3","D:\\SKRIPSI\\gowes\\client\\src\\ApolloProvider.js":"4","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Home.js":"5","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Register.js":"6","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Login.js":"7","D:\\SKRIPSI\\gowes\\client\\src\\pages\\SinglePost.js":"8","D:\\SKRIPSI\\gowes\\client\\src\\components\\PostForm.js":"9","D:\\SKRIPSI\\gowes\\client\\src\\components\\PostCard.js":"10","D:\\SKRIPSI\\gowes\\client\\src\\components\\DeleteButton.js":"11","D:\\SKRIPSI\\gowes\\client\\src\\components\\LikeButton.js":"12","D:\\SKRIPSI\\gowes\\client\\src\\components\\MyPopup.js":"13","D:\\SKRIPSI\\gowes\\client\\src\\context\\auth.js":"14","D:\\SKRIPSI\\gowes\\client\\src\\util\\graphql.js":"15","D:\\SKRIPSI\\gowes\\client\\src\\util\\hooks.js":"16","D:\\SKRIPSI\\gowes\\client\\src\\util\\AuthRoute.js":"17","D:\\SKRIPSI\\gowes\\client\\src\\components\\NavBar.js":"18","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Event.js":"19","D:\\SKRIPSI\\gowes\\client\\src\\components\\Footer.js":"20","D:\\SKRIPSI\\gowes\\client\\src\\components\\ShopCard.js":"21","D:\\SKRIPSI\\gowes\\client\\src\\components\\BookmarkButton.js":"22","D:\\SKRIPSI\\gowes\\client\\src\\components\\FilterBar.js":"23","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Cart.js":"24","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Bookmark.js":"25","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Profile.js":"26","D:\\SKRIPSI\\gowes\\client\\src\\components\\SidebarProfile.js":"27","D:\\SKRIPSI\\gowes\\client\\src\\components\\ProfileCard.js":"28","D:\\SKRIPSI\\gowes\\client\\src\\firebase\\index.js":"29","D:\\SKRIPSI\\gowes\\client\\src\\pages\\MyStore.js":"30","D:\\SKRIPSI\\gowes\\client\\src\\components\\SidebarStore.js":"31","D:\\SKRIPSI\\gowes\\client\\src\\pages\\ItemDetail.js":"32","D:\\SKRIPSI\\gowes\\client\\src\\components\\EditMyStoreDetailsCard.js":"33","D:\\SKRIPSI\\gowes\\client\\src\\components\\MyStoreDetailsCard.js":"34","D:\\SKRIPSI\\gowes\\client\\src\\components\\EditProfileCard.js":"35"},{"size":427,"mtime":1612157259343,"results":"36","hashOfConfig":"37"},{"size":2560,"mtime":1612318629081,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":771,"mtime":1611940613972,"results":"40","hashOfConfig":"37"},{"size":1258,"mtime":1612107889748,"results":"41","hashOfConfig":"37"},{"size":4498,"mtime":1612102806439,"results":"42","hashOfConfig":"37"},{"size":3495,"mtime":1612157205429,"results":"43","hashOfConfig":"37"},{"size":6895,"mtime":1611655972333,"results":"44","hashOfConfig":"37"},{"size":2499,"mtime":1611655963169,"results":"45","hashOfConfig":"37"},{"size":1696,"mtime":1611971208561,"results":"46","hashOfConfig":"37"},{"size":2297,"mtime":1611655953679,"results":"47","hashOfConfig":"37"},{"size":1599,"mtime":1611829443284,"results":"48","hashOfConfig":"37"},{"size":208,"mtime":1612079807198,"results":"49","hashOfConfig":"37"},{"size":1492,"mtime":1612280407086,"results":"50","hashOfConfig":"37"},{"size":871,"mtime":1612106932527,"results":"51","hashOfConfig":"37"},{"size":441,"mtime":1611655804812,"results":"52","hashOfConfig":"37"},{"size":436,"mtime":1611655804808,"results":"53","hashOfConfig":"37"},{"size":6932,"mtime":1612318610478,"results":"54","hashOfConfig":"37"},{"size":1354,"mtime":1611766150622,"results":"55","hashOfConfig":"37"},{"size":1040,"mtime":1611800446236,"results":"56","hashOfConfig":"37"},{"size":1552,"mtime":1612280750237,"results":"57","hashOfConfig":"37"},{"size":2726,"mtime":1612192236189,"results":"58","hashOfConfig":"37"},{"size":1109,"mtime":1611902913199,"results":"59","hashOfConfig":"37"},{"size":1350,"mtime":1611976949817,"results":"60","hashOfConfig":"37"},{"size":1103,"mtime":1612079454209,"results":"61","hashOfConfig":"37"},{"size":975,"mtime":1612318997772,"results":"62","hashOfConfig":"37"},{"size":1277,"mtime":1612318829770,"results":"63","hashOfConfig":"37"},{"size":6148,"mtime":1612316351458,"results":"64","hashOfConfig":"37"},{"size":573,"mtime":1612161104076,"results":"65","hashOfConfig":"37"},{"size":1028,"mtime":1612318991004,"results":"66","hashOfConfig":"37"},{"size":1282,"mtime":1612318391601,"results":"67","hashOfConfig":"37"},{"size":6940,"mtime":1612280750238,"results":"68","hashOfConfig":"37"},{"size":7416,"mtime":1612318678849,"results":"69","hashOfConfig":"37"},{"size":3884,"mtime":1612318581769,"results":"70","hashOfConfig":"37"},{"size":10981,"mtime":1612318731736,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"e97are",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\SKRIPSI\\gowes\\client\\src\\index.js",[],["150","151"],"D:\\SKRIPSI\\gowes\\client\\src\\App.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\reportWebVitals.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\ApolloProvider.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\Home.js",["152"],"import React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Grid, Transition } from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport ShopCard from '../components/ShopCard';\r\nimport FilterBar from '../components/FilterBar';\r\nimport { FETCH_ITEMS_QUERY } from '../util/graphql';\r\n\r\nfunction Home() {\r\n  const { user } = useContext(AuthContext);\r\n  const { loading, data } = useQuery(FETCH_ITEMS_QUERY)\r\n  const { getItems: items } = data ? data : []\r\n\r\n  // const {\r\n  //   loading,\r\n  //   data: { getPosts: posts }\r\n  // } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n  return (\r\n    <Grid stackable columns={6}>\r\n      <Grid.Row className=\"page-title\">\r\n        <FilterBar></FilterBar>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        {loading ? (\r\n          <h1>Loading posts..</h1>\r\n        ) : (\r\n            <Transition.Group duration={1000}>\r\n              {items &&\r\n                items.map((item) => (\r\n                  <Grid.Column key={item.id} style={{ marginBottom: 20 }}>\r\n                    <ShopCard item={item} />\r\n                  </Grid.Column>\r\n                ))}\r\n            </Transition.Group>\r\n          )}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Register.js",["153"],"import React, { useContext, useState } from 'react'\r\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react'\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { useForm } from '../util/hooks'\r\n\r\nfunction Register(props) {\r\n    const context = useContext(AuthContext)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const { onChange, onSubmit, values } = useForm(registerUser, {\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n    })\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data: { register: userData } }) {\r\n            context.login(userData)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    })\r\n\r\n    function registerUser() {\r\n        addUser()\r\n    }\r\n\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh', marginTop: 100 }}>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header color='standard' textAlign='center'>\r\n                    <span className=\"logoLogin\">Register account</span>\r\n                </Header>\r\n                <Form size='large' onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n                    <Segment style={{ boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)' }}>\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='mail'\r\n                            iconPosition='left'\r\n                            placeholder='Email'\r\n                            name=\"email\"\r\n                            value={values.email}\r\n                            error={errors.email ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='Name'\r\n                            name=\"name\"\r\n                            value={values.name}\r\n                            error={errors.name ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            name=\"password\"\r\n                            value={values.password}\r\n                            error={errors.password ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Confirm Password'\r\n                            type='password'\r\n                            name=\"confirmPassword\"\r\n                            value={values.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <Button color='secondary' fluid size='large'>\r\n                            Register\r\n                        </Button>\r\n                    </Segment>\r\n                </Form>\r\n                {Object.keys(errors).length > 0 && (\r\n                    <div className='ui error message'>\r\n                        <ul className=\"list\">\r\n                            {Object.values(errors).map(value => (\r\n                                <li key={value}>{value}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $name: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        name: $name\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ) {\r\n        id\r\n        email\r\n        token\r\n    }\r\n  }\r\n`\r\n\r\nexport default Register;","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Login.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\SinglePost.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\PostForm.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\PostCard.js",["154"],"import React, { useContext } from 'react';\r\nimport { Button, Card, Icon, Label, Image, Popup } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport LikeButton from './LikeButton';\r\nimport DeleteButton from './DeleteButton';\r\nimport MyPopup from './MyPopup';\r\n\r\n\r\nfunction PostCard({\r\n  post: { body, createdAt, id, username, likeCount, commentCount, likes }}) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Card fluid style={{boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)'}}>\r\n      <Card.Content>\r\n        <Image\r\n          floated=\"right\"\r\n          size=\"mini\"\r\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\r\n        />\r\n        <Card.Header>{username}</Card.Header>\r\n        <Card.Meta as={Link} to={`/posts/${id}`}>\r\n          {moment(createdAt).fromNow(true)}\r\n        </Card.Meta>\r\n        <Card.Description>{body}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <LikeButton user={user} post={{ id, likes, likeCount }} />\r\n        <Button onClick={()=>console.log(likes)}>test</Button>\r\n\r\n        <MyPopup content=\"Comment On Post\">\r\n          <Button labelPosition=\"right\" as={Link} to={`/posts/${id}`}>\r\n            <Button color=\"blue\" basic>\r\n              <Icon name=\"comments\" />\r\n            </Button>\r\n            <Label basic color=\"blue\" pointing=\"left\">\r\n              {commentCount}\r\n            </Label>\r\n          </Button>\r\n        </MyPopup>\r\n        {user && user.username === username && <DeleteButton postId={id} />}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PostCard;","D:\\SKRIPSI\\gowes\\client\\src\\components\\DeleteButton.js",["155"],"import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag'\r\nimport { Icon, Button, Confirm, Popup } from 'semantic-ui-react'\r\n\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\nimport MyPopup from './MyPopup';\r\n\r\nfunction DeleteButton({ postId, commentId, callback }) {\r\n\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n\r\n    const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION\r\n\r\n    const [deletePostOrMutation] = useMutation(mutation, {\r\n        update(proxy, result) {\r\n            setConfirmOpen(false)\r\n            // TODO: remove post cache\r\n\r\n            if (!commentId) {\r\n                const data = proxy.readQuery({\r\n                    query: FETCH_POSTS_QUERY\r\n                })\r\n\r\n                proxy.writeQuery({\r\n                    query: FETCH_POSTS_QUERY,\r\n                    data: {\r\n                        getPosts: data.getPosts.filter(p => p.id !== postId)\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n\r\n            if (callback) callback()\r\n        },\r\n        variables: { postId, commentId }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <MyPopup content={commentId ? \"Delete Comment\" : \"Delete Post\"}>\r\n                <Button\r\n                    as=\"div\"\r\n                    color=\"red\"\r\n                    floated=\"right\"\r\n                    onClick={() => setConfirmOpen(true)}\r\n                >\r\n                    <Icon name=\"trash\" style={{ margin: 0 }} />\r\n                </Button>\r\n            </MyPopup>\r\n\r\n            <Confirm\r\n                open={confirmOpen}\r\n                onCancel={() => setConfirmOpen(false)}\r\n                onConfirm={deletePostOrMutation}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst DELETE_POST_MUTATION = gql`\r\n    mutation deletePost($postId:ID!){\r\n        deletePost(postId: $postId)\r\n    }\r\n`\r\n\r\nconst DELETE_COMMENT_MUTATION = gql`\r\n    mutation deleteComment($postId:ID!, $commentId:ID!){\r\n        deleteComment(postId: $postId, commentId: $commentId){\r\n            id\r\n            comments{\r\n                id\r\n                username\r\n                createdAt\r\n                body\r\n            }\r\n            commentCount\r\n        }\r\n    }\r\n`\r\n\r\nexport default DeleteButton","D:\\SKRIPSI\\gowes\\client\\src\\components\\LikeButton.js",["156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag'\r\nimport { Icon, Label, Button, Popup } from 'semantic-ui-react'\r\n\r\nimport MyPopup from './MyPopup';\r\n\r\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\r\n  const [liked, setLiked] = useState(false)\r\n  useEffect(() => {\r\n    if (user && likes.find(like => like.username === user.username)) {\r\n      setLiked(true)\r\n    } else {\r\n      setLiked(false)\r\n    }\r\n  }, [user, likes])\r\n\r\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\r\n    variables: { postId: id }\r\n  })\r\n\r\n  const likeButton = user ? (\r\n    liked ? (\r\n      <Button color=\"teal\">\r\n        <Icon name=\"heart\" />\r\n      </Button>\r\n    ) : (\r\n        <Button color=\"teal\" basic>\r\n          <Icon name=\"heart\" />\r\n        </Button>\r\n      )\r\n  ) : (\r\n      <Button as={Link} to=\"/login\" color=\"teal\" basic>\r\n        <Icon name=\"heart\" />\r\n      </Button>\r\n    );\r\n  return (\r\n    <>\r\n      <MyPopup content={liked ? 'Unlike' : 'Like'}>\r\n        <Button as='div' labelPosition='right' onClick={likePost}>\r\n          {likeButton}\r\n          <Label basic color='teal' pointing='left'>\r\n            {likeCount}\r\n          </Label>\r\n        </Button>\r\n      </MyPopup>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst LIKE_POST_MUTATION = gql`\r\n    mutation likePost($postId:ID!){\r\n        likePost(postId: $postId){\r\n            id\r\n            likes{\r\n                id username\r\n            }\r\n            likeCount\r\n        }\r\n    }\r\n`\r\n\r\nexport default LikeButton","D:\\SKRIPSI\\gowes\\client\\src\\components\\MyPopup.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\context\\auth.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\util\\graphql.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\util\\hooks.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\util\\AuthRoute.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\NavBar.js",["157"],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\Event.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\Footer.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\ShopCard.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\BookmarkButton.js",["158"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag'\r\nimport { Icon, Button } from 'semantic-ui-react'\r\n\r\nimport MyPopup from './MyPopup';\r\nimport { FETCH_BOOKMARKS_QUERY } from '../util/graphql';\r\n\r\n\r\nfunction BookmarkButton({ user, item: { id, bookmarkedBy } }) {\r\n    const [bookmarked, setBookmarked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (user && bookmarkedBy.find(bookmark => bookmark.userId === user.id)) {\r\n            setBookmarked(true)\r\n        } else {\r\n            setBookmarked(false)\r\n        }\r\n    }, [user, bookmarkedBy])\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n    const [bookmarkPost] = useMutation(BOOKMARK_ITEM_MUTATION, {\r\n        variables: { itemId: id },\r\n        update(proxy, result) {\r\n            const data = proxy.readQuery({\r\n                query: FETCH_BOOKMARKS_QUERY\r\n            })\r\n\r\n            if(!bookmarked){\r\n                proxy.writeQuery({\r\n                    query: FETCH_BOOKMARKS_QUERY,\r\n                    data: {\r\n                        getBookmarks: [result.data.bookmarkItem, ...data.getBookmarks]\r\n                    }\r\n                })\r\n            }else{\r\n                proxy.writeQuery({\r\n                    query: FETCH_BOOKMARKS_QUERY,\r\n                    data: {\r\n                        getBookmarks: data.getBookmarks.filter(item => item.id !== id)\r\n                    },\r\n                })\r\n            }\r\n           \r\n            \r\n            \r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n    })\r\n\r\n    const bookmarkButton = user ? (\r\n        bookmarked ? (\r\n            <Button fluid color=\"teal\">\r\n                <Icon name=\"bookmark\" />\r\n            </Button>\r\n        ) : (\r\n                <Button fluid color=\"teal\" basic>\r\n                    <Icon name=\"bookmark\" />\r\n                </Button>\r\n            )\r\n    ) : (\r\n            <Button fluid as={Link} to=\"/login\" color=\"teal\" basic>\r\n                <Icon name=\"bookmark\" />\r\n            </Button>\r\n        );\r\n    return (\r\n\r\n        <MyPopup content={bookmarked ? 'Remove Bookmark' : 'Bookmark'}>\r\n            <div as='div' onClick={user ? bookmarkPost : ''}>\r\n                {bookmarkButton}\r\n            </div>\r\n        </MyPopup>\r\n\r\n    )\r\n}\r\n\r\nconst BOOKMARK_ITEM_MUTATION = gql`\r\n    mutation bookmarkItem($itemId:ID!){\r\n        bookmarkItem(itemId: $itemId){\r\n            id\r\n            bookmarkedBy{\r\n                id\r\n                userId\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default BookmarkButton","D:\\SKRIPSI\\gowes\\client\\src\\components\\FilterBar.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\Cart.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\Bookmark.js",["159"],"import React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Grid, Transition } from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport ShopCard from '../components/ShopCard';\r\nimport { FETCH_BOOKMARKS_QUERY } from '../util/graphql';\r\n\r\nfunction Home() {\r\n  const { user } = useContext(AuthContext);\r\n  const { loading, data } = useQuery(FETCH_BOOKMARKS_QUERY)\r\n  const { getBookmarks: bookmarks } = data ? data : []\r\n\r\n  return (\r\n    <Grid stackable columns={6}>\r\n      <Grid.Row className=\"page-title\">\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        {loading ? (\r\n          <h1>Loading posts..</h1>\r\n        ) : (\r\n            <Transition.Group duration={700}>\r\n              {bookmarks &&\r\n                bookmarks.map((bookmark) => (\r\n                  <Grid.Column key={bookmark.id} style={{ marginBottom: 20 }}>\r\n                    <ShopCard item={bookmark}/>\r\n                  </Grid.Column>\r\n                ))}\r\n            </Transition.Group>\r\n          )}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;","D:\\SKRIPSI\\gowes\\client\\src\\pages\\Profile.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\SidebarProfile.js",["160"],"D:\\SKRIPSI\\gowes\\client\\src\\components\\ProfileCard.js",["161"],"D:\\SKRIPSI\\gowes\\client\\src\\firebase\\index.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\MyStore.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\SidebarStore.js",["162"],"D:\\SKRIPSI\\gowes\\client\\src\\pages\\ItemDetail.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\EditMyStoreDetailsCard.js",["163"],"D:\\SKRIPSI\\gowes\\client\\src\\components\\MyStoreDetailsCard.js",[],"D:\\SKRIPSI\\gowes\\client\\src\\components\\EditProfileCard.js",["164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":11,"nodeType":"171","messageId":"172","endLine":11,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":2,"column":47,"nodeType":"171","messageId":"172","endLine":2,"endColumn":54},{"ruleId":"169","severity":1,"message":"174","line":2,"column":44,"nodeType":"171","messageId":"172","endLine":2,"endColumn":49},{"ruleId":"169","severity":1,"message":"174","line":4,"column":33,"nodeType":"171","messageId":"172","endLine":4,"endColumn":38},{"ruleId":"169","severity":1,"message":"174","line":5,"column":31,"nodeType":"171","messageId":"172","endLine":5,"endColumn":36},{"ruleId":"169","severity":1,"message":"175","line":25,"column":11,"nodeType":"171","messageId":"172","endLine":25,"endColumn":26},{"ruleId":"169","severity":1,"message":"176","line":22,"column":12,"nodeType":"171","messageId":"172","endLine":22,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":10,"column":11,"nodeType":"171","messageId":"172","endLine":10,"endColumn":15},{"ruleId":"169","severity":1,"message":"177","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"178","line":4,"column":20,"nodeType":"171","messageId":"172","endLine":4,"endColumn":31},{"ruleId":"169","severity":1,"message":"177","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":62,"column":33,"nodeType":"181","messageId":"182","endLine":62,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":67,"column":27,"nodeType":"181","messageId":"182","endLine":67,"endColumn":30},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Message' is defined but never used.","'Popup' is defined but never used.","'handleItemHover' is assigned a value but never used.","'errors' is assigned a value but never used.","'Grid' is defined but never used.","'useMutation' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]